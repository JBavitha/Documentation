`timescale 1ns/1ps

module tb_ocx_dlx_xlx_if;

  // Clock and reset signals
  reg clk_156_25MHz;
  reg opt_gckn;

  // Xilinx PHY Signals
  reg ocde;
  reg hb_gtwiz_reset_all_in;
  wire gtwiz_reset_all_out;
  wire gtwiz_reset_rx_datapath_out;
  reg gtwiz_reset_tx_done_in;
  reg gtwiz_reset_rx_done_in;
  reg gtwiz_buffbypass_tx_done_in;
  reg gtwiz_buffbypass_rx_done_in;
  reg gtwiz_userclk_tx_active_in;
  reg gtwiz_userclk_rx_active_in;

  // DLx Signals
  wire dlx_reset;
  wire [7:0] io_pb_o0_rx_init_done;
  reg [7:0] pb_io_o0_rx_run_lane;

  reg send_first;

  reg ln0_rx_valid_in;
  reg ln1_rx_valid_in;
  reg ln2_rx_valid_in;
  reg ln3_rx_valid_in;
  reg ln4_rx_valid_in;
  reg ln5_rx_valid_in;
  reg ln6_rx_valid_in;
  reg ln7_rx_valid_in;
  wire ln0_rx_valid_out;
  wire ln1_rx_valid_out;
  wire ln2_rx_valid_out;
  wire ln3_rx_valid_out;
  wire ln4_rx_valid_out;
  wire ln5_rx_valid_out;
  wire ln6_rx_valid_out;
  wire ln7_rx_valid_out;

  // Instantiate the DUT
  ocx_dlx_xlx_if dut (
    .clk_156_25MHz(clk_156_25MHz),
    .opt_gckn(opt_gckn),
    .ocde(ocde),
    .hb_gtwiz_reset_all_in(hb_gtwiz_reset_all_in),
    .gtwiz_reset_all_out(gtwiz_reset_all_out),
    .gtwiz_reset_rx_datapath_out(gtwiz_reset_rx_datapath_out),
    .gtwiz_reset_tx_done_in(gtwiz_reset_tx_done_in),
    .gtwiz_reset_rx_done_in(gtwiz_reset_rx_done_in),
    .gtwiz_buffbypass_tx_done_in(gtwiz_buffbypass_tx_done_in),
    .gtwiz_buffbypass_rx_done_in(gtwiz_buffbypass_rx_done_in),
    .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
    .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
    .dlx_reset(dlx_reset),
    .io_pb_o0_rx_init_done(io_pb_o0_rx_init_done),
    .pb_io_o0_rx_run_lane(pb_io_o0_rx_run_lane),
    .send_first(send_first),
    .ln0_rx_valid_in(ln0_rx_valid_in),
    .ln1_rx_valid_in(ln1_rx_valid_in),
    .ln2_rx_valid_in(ln2_rx_valid_in),
    .ln3_rx_valid_in(ln3_rx_valid_in),
    .ln4_rx_valid_in(ln4_rx_valid_in),
    .ln5_rx_valid_in(ln5_rx_valid_in),
    .ln6_rx_valid_in(ln6_rx_valid_in),
    .ln7_rx_valid_in(ln7_rx_valid_in),
    .ln0_rx_valid_out(ln0_rx_valid_out),
    .ln1_rx_valid_out(ln1_rx_valid_out),
    .ln2_rx_valid_out(ln2_rx_valid_out),
    .ln3_rx_valid_out(ln3_rx_valid_out),
    .ln4_rx_valid_out(ln4_rx_valid_out),
    .ln5_rx_valid_out(ln5_rx_valid_out),
    .ln6_rx_valid_out(ln6_rx_valid_out),
    .ln7_rx_valid_out(ln7_rx_valid_out)
  );

  // Clock generation
  initial begin
    clk_156_25MHz = 0;
    forever #3.2 clk_156_25MHz = ~clk_156_25MHz; // 156.25 MHz
  end

  initial begin
    opt_gckn = 0;
    forever #1.24 opt_gckn = ~opt_gckn; // 402 MHz
  end

  // Stimulus
  initial begin
    // Initialize inputs
    ocde = 0;
    hb_gtwiz_reset_all_in = 0;
    gtwiz_reset_tx_done_in = 0;
    gtwiz_reset_rx_done_in = 0;
    gtwiz_buffbypass_tx_done_in = 0;
    gtwiz_buffbypass_rx_done_in = 0;
    gtwiz_userclk_tx_active_in = 0;
    gtwiz_userclk_rx_active_in = 0;
    pb_io_o0_rx_run_lane = 8'h00;
    send_first = 0;
    ln0_rx_valid_in = 0;
    ln1_rx_valid_in = 0;
    ln2_rx_valid_in = 0;
    ln3_rx_valid_in = 0;
    ln4_rx_valid_in = 0;
    ln5_rx_valid_in = 0;
    ln6_rx_valid_in = 0;
    ln7_rx_valid_in = 0;

    // Reset sequence
    #10 hb_gtwiz_reset_all_in = 1;
    #20 hb_gtwiz_reset_all_in = 0;
    send_first = 1;

    // Simulate sync and retrain
    #50 pb_io_o0_rx_run_lane = 8'hFF; // All lanes active
    #100 gtwiz_reset_tx_done_in = 0;
    gtwiz_buffbypass_tx_done_in = 0;
    gtwiz_reset_rx_done_in = 1;
    gtwiz_buffbypass_rx_done_in = 1;
    gtwiz_userclk_tx_active_in = 0;
    gtwiz_userclk_rx_active_in = 0;
    #50 gtwiz_reset_tx_done_in = 1;
    gtwiz_buffbypass_tx_done_in = 0;
    
    

    // Test RX valid propagation
    #50 ln0_rx_valid_in = 1;
    ln1_rx_valid_in = 0;
    ln2_rx_valid_in = 0;
    ln3_rx_valid_in = 1;
    ln4_rx_valid_in = 1;
    ln5_rx_valid_in = 1;
    ln6_rx_valid_in = 1;
    ln7_rx_valid_in = 1;
    gtwiz_reset_tx_done_in = 1;
    gtwiz_buffbypass_tx_done_in = 1;
    

    // Deactivate
    #100 gtwiz_reset_rx_done_in = 0;
    gtwiz_buffbypass_rx_done_in = 0;

    // Finish simulation
    #500 $stop;
  end

endmodule
